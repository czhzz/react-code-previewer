{"version":3,"sources":["../../components/code-previewer/index.js"],"names":["React","Component","PropTypes","Icon","Tooltip","PrismLight","SyntaxHighlighter","jsx","javascript","sass","scss","coy","Clipboard","cls","CodePreviewer","props","setState","cliped","setTimeout","state","showCode","componentWillMount","registerLanguage","componentDidMount","render","children","code","onClipSuccess","onClipLeave","fontSize","propTypes","bool","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon, Tooltip } from \"antd\";\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { jsx, javascript, sass, scss } from \"react-syntax-highlighter/dist/esm/languages/prism\";\nimport coy from \"react-syntax-highlighter/dist/esm/styles/prism/coy\";\nimport Clipboard from \"react-clipboard.js\";\nimport cls from \"classnames\";\nimport \"../fonts/iconfont.js\";\n\nclass CodePreviewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cliped: false,\n      showCode: false\n    };\n  }\n\n  componentWillMount() {\n    // 如果不加这段样式显示不出来\n    SyntaxHighlighter.registerLanguage(\"jsx\", jsx);\n    SyntaxHighlighter.registerLanguage(\"javascript\", javascript);\n  }\n  onClipSuccess = () => {\n    this.setState({\n      cliped: true\n    });\n  };\n  onClipLeave = () => {\n    setTimeout(() => {\n      this.setState({\n        cliped: false\n      });\n    }, 300);\n  };\n  componentDidMount() {\n    const { showCode } = this.props;\n    this.setState({\n      showCode\n    });\n  }\n  render() {\n    const { children, code } = this.props;\n    return (\n      <div className=\"code-preview-container\">\n        <div className=\"cp-component\">\n          <div className=\"component-content\">{children}</div>\n        </div>\n        <div className=\"cp-code\">\n          <div className=\"code-header\">\n            <Clipboard className=\"copy-wrapper\" data-clipboard-text={code} onSuccess={this.onClipSuccess}>\n              <Tooltip title={this.state.cliped ? \"已复制\" : \"复制到剪贴板\"} onMouseLeave={this.onClipLeave}>\n                <div className=\"copy\">\n                  <Icon type=\"copy\" style={{ fontSize: \"16px\" }} />\n                </div>\n              </Tooltip>\n            </Clipboard>\n            <div className=\"code-wrapper\">\n              <Tooltip title={this.state.showCode ? \"隐藏代码\" : \"显示代码\"}>\n                <svg className=\"icon icon-code\" aria-hidden=\"true\" onClick={() => this.setState({ showCode: !this.state.showCode })}>\n                  <use xlinkHref={this.state.showCode ? \"#icon-code-close\" : \"#icon-code-open\"}></use>\n                </svg>\n              </Tooltip>\n            </div>\n          </div>\n          {/* <div className=\"code-tabs\">code tabs</div> */}\n          <div className={cls({ \"code-content\": true, \"hide-code-content\": !this.state.showCode })}>\n            <SyntaxHighlighter language=\"jsx\" style={coy}>\n              {code}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n        {/* <div>sdfsdf</div> */}\n      </div>\n    );\n  }\n}\n\nCodePreviewer.propTypes = {\n  showCode: PropTypes.bool,\n  code: PropTypes.string\n};\nCodePreviewer.defaultProps = {\n  showCode: true\n};\n\nexport default CodePreviewer;\n"],"file":"index.js"}
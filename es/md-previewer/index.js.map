{"version":3,"sources":["../../components/md-previewer/index.js"],"names":["React","PureComponent","PropTypes","cls","ReactMarkdown","CodeBlock","HeadingBlock","MdPreviewer","componentDidMount","window","location","hash","decodeURIComponent","scrollToAnchor","hashParts","split","console","log","length","slice","document","querySelector","scrollIntoView","onhashchange","render","md","props","code","heading","propTypes","string","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,kBAAxC,C,CACA;;IAEMC,W;;;;;;;;;;;SACJC,iB,GAAA,6BAAoB;AAClB;AACA;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBF,MAAM,CAACG,kBAAP,CAA0BH,MAAM,CAACC,QAAP,CAAgBC,IAA1C,CAAvB;;AACA,QAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,UAAMC,SAAS,GAAGL,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBI,KAArB,CAA2B,GAA3B,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,SAAzB;;AAEA,UAAIA,SAAS,CAACI,MAAV,GAAmB,CAAvB,EAA0B;AACxB,YAAMP,IAAI,GAAGG,SAAS,CAACK,KAAV,CAAgB,CAAC,CAAjB,EAAoB,CAApB,CAAb;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,IAArB;AAEAS,QAAAA,QAAQ,CAACC,aAAT,OAA2BV,IAA3B,EAAmCW,cAAnC;AACD;AACF,KAVD;;AAWAT,IAAAA,cAAc;AACdJ,IAAAA,MAAM,CAACc,YAAP,GAAsBV,cAAtB;AACD,G;;SACDW,M,GAAA,kBAAS;AAAA,QACCC,EADD,GACQ,KAAKC,KADb,CACCD,EADD,EAEP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,oBAAC,aAAD;AACE,MAAA,MAAM,EAAEA,EADV;AAEE,MAAA,UAAU,EAAE,KAFd,CAGE;AAHF;AAIE,MAAA,SAAS,EAAE;AACTE,QAAAA,IAAI,EAAEtB,SADG;AAETuB,QAAAA,OAAO,EAAEtB;AAFA;AAJb,MADF,CADF;AAaD,G;;;EA5DuBL,a;;AA+D1BM,WAAW,CAACsB,SAAZ,GAAwB;AACtBJ,EAAAA,EAAE,EAAEvB,SAAS,CAAC4B,MAAV,CAAiBC;AADC,CAAxB;AAIAxB,WAAW,CAACyB,YAAZ,GAA2B;AACzBP,EAAAA,EAAE,EAAE;AADqB,CAA3B;AAIA,eAAelB,WAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cls from \"classnames\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport { CodeBlock, HeadingBlock } from \"../md-node-types\";\n// const htmlParser = require(\"react-markdown/plugins/html-parser\");\n\nclass MdPreviewer extends PureComponent {\n  componentDidMount() {\n    // Decode entities in the URL\n    // Sometimes a URL like #/foo#bar will be encoded as #/foo%23bar\n    window.location.hash = window.decodeURIComponent(window.location.hash);\n    const scrollToAnchor = () => {\n      const hashParts = window.location.hash.split(\"#\");\n      console.log(\"hashParts\", hashParts);\n\n      if (hashParts.length > 2) {\n        const hash = hashParts.slice(-1)[0];\n        console.log(\"hash=\", hash);\n\n        document.querySelector(`#${hash}`).scrollIntoView();\n      }\n    };\n    scrollToAnchor();\n    window.onhashchange = scrollToAnchor;\n  }\n  render() {\n    const { md } = this.props;\n    // var processNodeDefinitions = new HtmlToReact.ProcessNodeDefinitions(React);\n    // const parseHtml = htmlParser({\n    //   isValidNode: node => {\n    //     console.log(\"--- node \", node);\n\n    //     return node.type !== \"script\";\n    //   },\n    //   processingInstructions: [\n    //     {\n    //       // Custom <h1> processing\n    //       shouldProcessNode: function(node) {\n    //         return node.parent && node.parent.name && node.parent.name === \"h2\";\n    //       },\n    //       processNode: function(node, children) {\n    //         return node.data.toUpperCase();\n    //       }\n    //     },\n    //     {\n    //       // Anything else\n    //       shouldProcessNode: function(node) {\n    //         return true;\n    //       },\n    //       processNode: processNodeDefinitions.processDefaultNode\n    //     }\n    //   ]\n    // });\n    return (\n      <div className=\"markdown-previewer-container\">\n        <ReactMarkdown\n          source={md}\n          escapeHtml={false}\n          // astPlugins={[parseHtml]}\n          renderers={{\n            code: CodeBlock,\n            heading: HeadingBlock\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nMdPreviewer.propTypes = {\n  md: PropTypes.string.isRequired\n};\n\nMdPreviewer.defaultProps = {\n  md: null\n};\n\nexport default MdPreviewer;\n"],"file":"index.js"}
{"version":3,"sources":["../../components/md-previewer/index.js"],"names":["MdPreviewer","componentDidMount","render","md","props","code","CodeBlock","heading","HeadingBlock","PureComponent","propTypes","PropTypes","string","isRequired","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;IAEMA,W;;;;;;;;;;;SACJC,iB,GAAA,6BAAoB,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,G;;SACDC,M,GAAA,kBAAS;AAAA,QACCC,EADD,GACQ,KAAKC,KADb,CACCD,EADD,EAEP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,gCAAC,oBAAD;AACE,MAAA,MAAM,EAAEA,EADV;AAEE,MAAA,UAAU,EAAE,KAFd,CAGE;AAHF;AAIE,MAAA,SAAS,EAAE;AACTE,QAAAA,IAAI,EAAEC,sBADG;AAETC,QAAAA,OAAO,EAAEC;AAFA;AAJb,MADF,CADF;AAaD,G;;;EA1DuBC,oB;;AA6D1BT,WAAW,CAACU,SAAZ,GAAwB;AACtBP,EAAAA,EAAE,EAAEQ,sBAAUC,MAAV,CAAiBC;AADC,CAAxB;AAIAb,WAAW,CAACc,YAAZ,GAA2B;AACzBX,EAAAA,EAAE,EAAE;AADqB,CAA3B;eAIeH,W","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cls from \"classnames\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport { CodeBlock, HeadingBlock } from \"../md-node-types\";\n// const htmlParser = require(\"react-markdown/plugins/html-parser\");\n\nclass MdPreviewer extends PureComponent {\n  componentDidMount() {\n    // Decode entities in the URL\n    // Sometimes a URL like #/foo#bar will be encoded as #/foo%23bar\n    // window.location.hash = window.decodeURIComponent(window.location.hash);\n    // const scrollToAnchor = () => {\n    //   const hashParts = window.location.hash.split(\"#\");\n    //   console.log(\"hashParts\", hashParts);\n    //   if (hashParts.length > 2) {\n    //     const hash = hashParts.slice(-1)[0];\n    //     console.log(\"hash=\", hash);\n    //     document.querySelector(`#${hash}`).scrollIntoView();\n    //   }\n    // };\n    // scrollToAnchor();\n    // window.onhashchange = scrollToAnchor;\n  }\n  render() {\n    const { md } = this.props;\n    // var processNodeDefinitions = new HtmlToReact.ProcessNodeDefinitions(React);\n    // const parseHtml = htmlParser({\n    //   isValidNode: node => {\n    //     console.log(\"--- node \", node);\n\n    //     return node.type !== \"script\";\n    //   },\n    //   processingInstructions: [\n    //     {\n    //       // Custom <h1> processing\n    //       shouldProcessNode: function(node) {\n    //         return node.parent && node.parent.name && node.parent.name === \"h2\";\n    //       },\n    //       processNode: function(node, children) {\n    //         return node.data.toUpperCase();\n    //       }\n    //     },\n    //     {\n    //       // Anything else\n    //       shouldProcessNode: function(node) {\n    //         return true;\n    //       },\n    //       processNode: processNodeDefinitions.processDefaultNode\n    //     }\n    //   ]\n    // });\n    return (\n      <div className=\"markdown-previewer-container\">\n        <ReactMarkdown\n          source={md}\n          escapeHtml={false}\n          // astPlugins={[parseHtml]}\n          renderers={{\n            code: CodeBlock,\n            heading: HeadingBlock\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nMdPreviewer.propTypes = {\n  md: PropTypes.string.isRequired\n};\n\nMdPreviewer.defaultProps = {\n  md: null\n};\n\nexport default MdPreviewer;\n"],"file":"index.js"}
{"version":3,"sources":["../../components/md-node-types/html-block.js"],"names":["HtmlBlock","props","value","children","includes","nodeValue","replace","render","renderHtml","PureComponent"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAEMA,S;;;;;;;;;;;;;mGACS,YAAM;AACjB;AADiB,wBAEW,MAAKC,KAFhB;AAAA,UAETC,KAFS,eAETA,KAFS;AAAA,UAEFC,QAFE,eAEFA,QAFE;;AAGjB,UAAID,KAAK,CAACE,QAAN,CAAe,MAAf,CAAJ,EAA4B;AAC1B,YAAMC,SAAS,GAAGH,KAAK,CAACI,OAAN,CAAc,WAAd,EAA2B,EAA3B,CAAlB,CAD0B,CAE1B;;AACA,YAAID,SAAS,KAAK,EAAlB,EAAsB;AACpB,iBAAOH,KAAP;AACD,SALyB,CAO1B;;;AACA,eACE;AAAI,UAAA,EAAE,EAAEG,SAAR;AAAmB,UAAA,SAAS,EAAC;AAA7B,WACE;AAAM,UAAA,SAAS,EAAC;AAAhB,WAAyBA,SAAzB,CADF,EAEE;AAAG,UAAA,IAAI,QAAMA;AAAb,eAFF,CADF;AAMD,OAdD,MAcO;AACL;AACA,eAAO,kEAAG,iCAAgBH,KAAhB,CAAH,CAAP;AACD;AACF,K;;;;;;SACDK,M,GAAA,kBAAS;AACP,WAAO,kEAAG,KAAKC,UAAL,EAAH,CAAP;AACD,G;;;EAzBqBC,oB;;eA4BTT,S","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cls from \"classnames\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nclass HtmlBlock extends PureComponent {\n  renderHtml = () => {\n    // console.log(\"--- this.props ---\", this.props);\n    const { value, children } = this.props;\n    if (value.includes(\"html\")) {\n      const nodeValue = value.replace(/<[^<>]+>/g, \"\");\n      //如果节点内容为空，就什么也不做\n      if (nodeValue === \"\") {\n        return value;\n      }\n\n      //如果节点内容不为空，就解析成可链接的 h2 标签\n      return (\n        <h2 id={nodeValue} className=\"h2-link-container\">\n          <span className=\"title\">{nodeValue}</span>\n          <a href={`#${nodeValue}`}>#</a>\n        </h2>\n      );\n    } else {\n      //如果不是 <html></html> 节点 ，那么就是其他的 html 类型节点，我们转换成 html 节点再返回\n      return <>{ReactHtmlParser(value)}</>;\n    }\n  };\n  render() {\n    return <>{this.renderHtml()}</>;\n  }\n}\n\nexport default HtmlBlock;\n"],"file":"html-block.js"}